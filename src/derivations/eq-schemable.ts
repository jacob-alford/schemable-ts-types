/**
 * Schemable instances for Eq
 *
 * **Warning: DO NOT EDIT, this module is autogenerated**
 *
 * @since 2.0.0
 */
import type * as Eq from 'schemata-ts/internal/eq'
import { interpret } from 'schemata-ts/Schema'
import { type Schemable } from 'schemata-ts/Schemable'
import * as annotate from 'schemata-ts/schemables/annotate/instances/eq'
import * as array from 'schemata-ts/schemables/array/instances/eq'
import * as checkDigit from 'schemata-ts/schemables/check-digit/instances/eq'
import * as clone from 'schemata-ts/schemables/clone/instances/eq'
import * as date from 'schemata-ts/schemables/date/instances/eq'
import * as guardedUnion from 'schemata-ts/schemables/guarded-union/instances/eq'
import * as invariant from 'schemata-ts/schemables/invariant/instances/eq'
import * as lazy from 'schemata-ts/schemables/lazy/instances/eq'
import * as map from 'schemata-ts/schemables/map/instances/eq'
import * as optional from 'schemata-ts/schemables/optional/instances/eq'
import * as padding from 'schemata-ts/schemables/padding/instances/eq'
import * as parser from 'schemata-ts/schemables/parser/instances/eq'
import * as pattern from 'schemata-ts/schemables/pattern/instances/eq'
import * as primitives from 'schemata-ts/schemables/primitives/instances/eq'
import * as refine from 'schemata-ts/schemables/refine/instances/eq'
import * as struct from 'schemata-ts/schemables/struct/instances/eq'

/**
 * @since 2.0.0
 * @category Instances
 */
const EqSchemable: Schemable<Eq.SchemableLambda> = {
  ...annotate.AnnotateEq,
  ...array.ArrayEq,
  ...checkDigit.CheckDigitEq,
  ...clone.CloneEq,
  ...date.DateEq,
  ...guardedUnion.GuardedUnionEq,
  ...invariant.InvariantEq,
  ...lazy.LazyEq,
  ...map.MapEq,
  ...optional.OptionalEq,
  ...padding.PaddingEq,
  ...parser.ParserEq,
  ...pattern.PatternEq,
  ...primitives.PrimitivesEq,
  ...refine.RefineEq,
  ...struct.StructEq,
}

/**
 * @since 2.0.0
 * @category Interpreters
 */
export const getEq = interpret(EqSchemable)
