/**
 * Schemable instances for Guard
 *
 * **Warning: DO NOT EDIT, this module is autogenerated**
 *
 * @since 2.0.0
 */
import * as G from 'schemata-ts/internal/guard'
import { interpret } from 'schemata-ts/Schema'
import { Schemable } from 'schemata-ts/Schemable'
import * as annotate from 'schemata-ts/schemables/annotate/instances/guard'
import * as array from 'schemata-ts/schemables/array/instances/guard'
import * as checkDigit from 'schemata-ts/schemables/check-digit/instances/guard'
import * as date from 'schemata-ts/schemables/date/instances/guard'
import * as guardedUnion from 'schemata-ts/schemables/guarded-union/instances/guard'
import * as invariant from 'schemata-ts/schemables/invariant/instances/guard'
import * as map from 'schemata-ts/schemables/map/instances/guard'
import * as option from 'schemata-ts/schemables/option/instances/guard'
import * as optional from 'schemata-ts/schemables/optional/instances/guard'
import * as padding from 'schemata-ts/schemables/padding/instances/guard'
import * as pattern from 'schemata-ts/schemables/pattern/instances/guard'
import * as primitives from 'schemata-ts/schemables/primitives/instances/guard'
import * as refine from 'schemata-ts/schemables/refine/instances/guard'
import * as structM from 'schemata-ts/schemables/struct/instances/guard'

/**
 * @since 2.0.0
 * @category Instances
 */
const GuardSchemable: Schemable<G.SchemableLambda> = {
  ...annotate.AnnotateGuard,
  ...array.ArrayGuard,
  ...checkDigit.CheckDigitGuard,
  ...date.DateGuard,
  ...guardedUnion.GuardedUnionGuard,
  ...invariant.InvariantGuard,
  ...map.MapGuard,
  ...option.OptionGuard,
  ...optional.OptionalGuard,
  ...padding.PaddingGuard,
  ...pattern.PatternGuard,
  ...primitives.PrimitivesGuard,
  ...refine.RefineGuard,
  ...structM.StructMGuard,
}

/**
 * @since 2.0.0
 * @category Interpreters
 */
export const getGuard = interpret(GuardSchemable)
